&-skills {
	$types: (
		'prefered': (#0BB07C, rgba(white, 0.9)),
		'expert': (#0093A5),
		'medium': (#4C4C4C),
		'mini': (#BF4B46)
	);

	margin-top: 50px;

	@include mscr($stage-c) {
		height: 45vh;
		min-height: 400px;
	}

	@media print {
		height: auto;
		min-height: 100%;
	}

	// TODO: Fix me, this is a repeated class
	.offset-heading {
		display: block;

		margin-bottom: 20px;
		padding-bottom: 12px;

		font-size: 28px;
		border-bottom: 1px solid white;

		@include mscr($stage-c) {
			display: none;
		}
	}

	.fold__content {
		position: relative;

		text-align: left;

		@include mscr($stage-c) {
			top: 50%;

			transform: translate(0, (-1 * (100%) / 2));
		}

		@media print {
			position: static;
			transform: none;
		}
	}

	&__body {
		@extend %container;
	}

	.legend {
		display: block;
		text-align: center;

		margin-bottom: 50px;

		width: 100%;

		@media print {
			margin-bottom: 5px;
			text-align: left;
		}

		&__item {
			display: inline-block;
			vertical-align: middle;

			padding: 5px;

			font-size: 12px;

			border-bottom: transparent solid 3px;

			transition: border-bottom-color .2s;

			&:not(:last-child) {
				margin-right: 20px;
			}

			&:before {
				display: inline-block;
				vertical-align: middle;
				content: '';

				margin-right: 6px;

				width: 7px;
				height: 7px;
			}

			@each $type, $colours in $types {
				&--#{$type} {
					border-bottom-color: rgba(nth($colours, 1), 0);

					&:hover {
						border-bottom-color: nth($colours, 1);
					}

					&:before {
						background-color: nth($colours, 1);
					}
				}
			}
		}
	}

	@at-root .skills {
		display: flex;
		flex-flow: row wrap;
		justify-content: flex-start;

		margin: (-1 * (4px));

		@each $type, $colours in $types {
			&.#{$type} {
				.skills__item:not(.skills__item--#{$type}) {
					opacity: 0.2;
				}
			}
		}

		&__item {
			display: inline-block;
			vertical-align: middle;

			flex: 1 0 auto;
			padding: 6px;
			margin: 4px;
			font-size: 15px;

			text-align: center;
			text-transform: lowercase;

			color: white;

			transition: opacity .2s;

			@include mscr($stage-c) {
				padding: 10px;
				font-soze: 16px;
			}

			@each $type, $colours in $types {
				&--#{$type} {
					background-color: nth($colours, 1);

					@if (length($colours) >= 2) {
						small {
							color: nth($colours, 2);
						}
					}
				}
			}

			small {
				display: inline-block;
				vertical-align: middle;

				padding-right: 4px;

				font-size: 75%;

				color: rgba(white, 0.5);

				&:after {
					content: ':';
				}

				@media print {
					display: none;
				}
			}
		}
	}
}
